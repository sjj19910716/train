<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration
		PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
		"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >
<generatorConfiguration >
	<!-- mysql jar 文件位置 -->
	<classPathEntry location="D:\tools\sqljdbc4-2.0.jar" />
	<context id="store" targetRuntime="MyBatis3">
		<commentGenerator>
			<!-- 是否去除自动生成的注释 true：是 ： false:否 -->
			<property name="suppressAllComments" value="true" />
			<!-- 是否去除所有自动生成的文件的时间戳，默认为false -->
			<!-- <property name="suppressDate" value="false"/> -->
		</commentGenerator>
		<!--数据库连接的信息：驱动类、连接地址、用户名、密码 -->
		<jdbcConnection driverClass="com.microsoft.sqlserver.jdbc.SQLServerDriver"
						connectionURL="jdbc:sqlserver://localhost:1433;DatabaseName=sjj"
						userId="sa"
						password="123456">
		</jdbcConnection>
		<!-- targetPackage:包名称(自定义)  targetProject：项目路径(自定义)   -->
		<javaModelGenerator targetPackage="com.service.entity" targetProject="src\main\java">
			<!-- enableSubPackages:是否让schema作为包的后缀 -->
			<property name="enableSubPackages" value="false" />
			<!-- 从数据库返回的值被清理前后的空格  -->
			<property name="trimStrings" value="true" />
		</javaModelGenerator>
		<!-- 配置生成相应的实体Mapper.xml，对于Mapper3.X我们需要把type="XMLMAPPER" -->
		<!-- targetPackage:包名称(自定义)  targetProject：项目路径(自定义)   -->
		<sqlMapGenerator targetPackage="mappers" targetProject="src\main\resources">
			<property name="enableSubPackages" value="false" />
		</sqlMapGenerator>
		<!-- 配置生成相应的接口类，对应与Mapper.xml中的一系列CRUD方法SQL语句 -->
		<!-- targetPackage:包名称(自定义)  targetProject：项目路径(自定义)   -->
		<!--XMLMAPPER:xml类sql   ANNOTATEDMAPPER:注解类sql  -->
		<javaClientGenerator targetPackage="com.service.mapper" targetProject="src\main\java" type="ANNOTATEDMAPPER">
			<property name="enableSubPackages" value="false" />
		</javaClientGenerator>
		<!-- 用户表 -->
		<!--<table schema="stone" tableName="user_table" domainObjectName="UserTable"-->
			   <!--enableCountByExample="false"-->
			   <!--enableUpdateByExample="false"-->
			   <!--enableDeleteByExample="false"-->
			   <!--enableSelectByExample="false"-->
			   <!--selectByExampleQueryId="false"-->
		<!--&gt;-->
		<!--</table>-->
		<table tableName="fcn_subject" domainObjectName="FcnSubject"
			   enableCountByExample="true" enableUpdateByExample="true"
			   enableDeleteByExample="true" enableSelectByExample="true"
			   selectByExampleQueryId="true">
			<!--sqlServer插入数据后返回id值的方法-->
			<generatedKey column="id" sqlStatement="SQLServer" identity="true"/>
		</table>
		<table tableName="fcn_question" domainObjectName="FcnQuestion"
			   enableCountByExample="true" enableUpdateByExample="true"
			   enableDeleteByExample="true" enableSelectByExample="true"
			   selectByExampleQueryId="true">
			<!--sqlServer插入数据后返回id值的方法-->
			<generatedKey column="id" sqlStatement="SQLServer" identity="true"/>
		</table>
		<table tableName="fcn_score" domainObjectName="FcnScore"
			   enableCountByExample="true" enableUpdateByExample="true"
			   enableDeleteByExample="true" enableSelectByExample="true"
			   selectByExampleQueryId="true">
			<!--sqlServer插入数据后返回id值的方法-->
			<!--<generatedKey column="id" sqlStatement="SQLServer" identity="true"/>-->
		</table>
		<table tableName="fcn_staff" domainObjectName="FcnStaff"
			   enableCountByExample="true" enableUpdateByExample="true"
			   enableDeleteByExample="true" enableSelectByExample="true"
			   selectByExampleQueryId="true">
			<!--sqlServer插入数据后返回id值的方法-->
			<!--<generatedKey column="id" sqlStatement="SQLServer" identity="true"/>-->
		</table>
		<table tableName="fcn_dept" domainObjectName="FcnDept"
			   enableCountByExample="true" enableUpdateByExample="true"
			   enableDeleteByExample="true" enableSelectByExample="true"
			   selectByExampleQueryId="true">
			<!--sqlServer插入数据后返回id值的方法-->
			<!--<generatedKey column="id" sqlStatement="SQLServer" identity="true"/>-->
		</table>

	</context>
</generatorConfiguration>